---
// @ts-nocheck
/**
 * ResponsiveImage.astro - Basitleştirilmiş responsive görsel bileşeni
 */

import "../styles/responsive-images.css";
import { generateSrcsetString } from "../lib/image-utils.js";

export interface Props {
  src: string;
  alt: string;
  width?: number;
  height?: number;
  class?: string;
  lazy?: boolean;
  sizes?: string;
}

// TypeScript tipleriyle doğru şekilde çalışması için
const props = Astro.props as Props;
const src = props.src;
const alt = props.alt;
const width = props.width || 1320;
const height = props.height || 920;
const className = props.class || "";
const lazy = props.lazy !== false;
const sizes = props.sizes || "(max-width: 360px) 360px, (max-width: 480px) 480px, (max-width: 768px) 768px, 1320px";

// En-boy oranını hesapla
const aspectRatio = width / height;

// Farklı ekran boyutları için srcset oluştur
const breakpoints = [360, 480, 768, 1024, 1320];
let srcset = "";
try {
  srcset = generateSrcsetString(src, width, height, breakpoints);
} catch (error) {
  console.error("srcset oluşturma hatası:", error);
}
---

<div 
  class={`responsive-image-container ${className}`} 
  style={`--aspect-ratio: ${aspectRatio}; aspect-ratio: ${width} / ${height};`}
>
  <img
    src={src}
    alt={alt}
    width={width}
    height={height}
    loading={lazy ? "lazy" : "eager"}
    decoding="async"
    class="responsive-image"
    sizes={sizes}
    srcset={srcset || null}
  />
</div> 