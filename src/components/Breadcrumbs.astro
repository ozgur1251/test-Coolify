---
// src/components/Breadcrumbs.astro

interface BreadcrumbItem {
  name: string;
  url?: string; // Son öğe için URL olmayabilir veya tıklanabilir olmamalıdır
}

interface Props {
  items: BreadcrumbItem[];
}

const { items } = Astro.props;
---

<nav aria-label="breadcrumb" class="breadcrumb-nav">
  <ol class="breadcrumb-list">
    {items.map((item, index) => (
      <li class="breadcrumb-item">
        {item.url && index < items.length - 1 ? (
          <a href={item.url}>{item.name}</a>
        ) : (
          <span aria-current={index === items.length - 1 ? "page" : undefined}>
            {item.name}
          </span>
        )}
        {/* Son öğe değilse ayırıcı ekle */}
        {index < items.length - 1 && <span class="separator" aria-hidden="true">/</span>}
      </li>
    ))}
  </ol>
</nav>

<style>
  .breadcrumb-nav {
    margin-top: 1.5rem; /* Üstten boşluk eklendi */
    margin-bottom: 1.5rem; /* İçerikle arasında boşluk */
    font-size: 0.9rem;
    color: var(--color-text-light);
  }
  .breadcrumb-list {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    justify-content: center; /* Ortalamak için eklendi */
    flex-wrap: wrap; /* Mobil için */
    align-items: center;
  }
  .breadcrumb-item {
    display: inline-flex; /* Ayırıcının dikey hizalanması için */
    align-items: center;
  }
  .breadcrumb-item a {
    color: var(--color-accent);
    text-decoration: none;
    transition: color 0.2s ease;
  }
  .breadcrumb-item a:hover,
  .breadcrumb-item a:focus {
    color: var(--color-accent-dark);
    text-decoration: underline;
  }
  .breadcrumb-item span[aria-current="page"] {
    color: var(--color-text);
    font-weight: 500;
  }
  .separator {
    margin: 0 0.5em;
    color: var(--color-border);
    user-select: none;
  }
</style> 