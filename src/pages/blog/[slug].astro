---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getBlogPostBySlug, getCategories } from '../../lib/supabase';
import { parseMarkdown } from '../../lib/markdown';
import ResponsiveImage from '../../components/ResponsiveImage.astro';
import Breadcrumbs from '../../components/Breadcrumbs.astro';
import '../../styles/blog.css';
import '../../styles/responsive-images.css';

// Server-side rendering kullan (statik ön-render yerine)
export const prerender = false;

// Site URL'sini ve Şirket adını çevre değişkeninden alma
const SITE_URL = import.meta.env.SITE_URL || Astro.url.origin || "https://tr.istanbulbinaguclendirme.com";
const COMPANY_NAME = import.meta.env.COMPANY_NAME || "İstanbul Bina Güçlendirme";

// Dinamik rota parametresini al
const { slug } = Astro.params;

// İlgili blog yazısını getir
const post = await getBlogPostBySlug(slug as string);

// Blog yazısı bulunamadıysa hata sayfasına yönlendir
if (!post) {
  return Astro.redirect('/404');
}

// Tüm kategorileri alalım - schema.org ve breadcrumb için kullanacağız
const categories = await getCategories();
const category = categories.find((cat: { id: number | string; name: string; slug: string }) => cat.id === post.category_id);

// Kategori adından şehir bilgisini çıkar
const cityName = category?.name ? category.name.split(' ')[0] : "İstanbul";

// Tüm kategorileri OfferCatalog yapısına dönüştür
const offerCatalogs = categories.map((cat: any) => {
  return {
    "@type": "OfferCatalog",
    "name": cat.name,
    "itemListElement": [
      {
        "@type": "Offer",
        "itemOffered": {
          "@type": "Service",
          "name": `${cat.name} Hizmeti`,
          "description": cat.description || `${cat.name} alanında profesyonel güçlendirme hizmetleri`
        }
      }
    ]
  };
});

// FAQ için bir arayüz tanımlayalım
interface FaqItem {
  question: string;
  answer: string;
}

// Sosyal medya değerlerini işle
const socialMedia = post.social_media || {};

// Markdown içeriğini işle
function adjustHeadingLevels(content: string): string {
  if (!content) return '';
  content = content.replace(/^## (.+)$/gm, '# $1');
  content = content.replace(/^### (.+)$/gm, '## $1');
  content = content.replace(/^#### (.+)$/gm, '### $1');
  return content;
}

// === STEP 1: Get HTML and Headings ===
const { html: contentHtml, headings: tocHeadings } = parseMarkdown(adjustHeadingLevels(post.content));

// FAQ verilerini işleme fonksiyonu
function processFaqData(faqData: any[]): FaqItem[] {
  if (!faqData || !Array.isArray(faqData) || faqData.length === 0) {
    return [];
  }
  
  return faqData.filter(item => 
    item && typeof item === 'object'
  ).map(item => ({
    question: item.question || item.Question || item.soru || item.Soru || '',
    answer: item.answer || item.Answer || item.cevap || item.Cevap || ''
  })).filter(item => item.question && item.answer);
}

// FAQ verilerini işle
const processedFaq = processFaqData(post.faq) || processFaqData(post.sss) || [];
const hasFaq = processedFaq.length > 0;

// Category var mı kontrol et
const hasCategory = !!category;

// === STEP 2: Generate ToC HTML Server-side ===
let tocHtml = '';
if (tocHeadings && tocHeadings.length > 1) {
  tocHtml += '<h2 class="toc-title">İçindekiler</h2><ul class="toc-list">';
  tocHeadings.forEach((item: {level: number, text: string, slug: string}) => {
    // Başlık seviyesine göre girinti sınıfı ekle (opsiyonel, Tailwind varsa kullanılabilir veya CSS ile hedeflenebilir)
    // const indentClass = item.level === 3 ? 'ml-4' : item.level === 4 ? 'ml-8' : '';
    // Şu anki CSS'de girinti olmadığı için sınıf eklenmiyor, gerekirse eklenmeli
    tocHtml += `<li><a href="#${item.slug}" class="toc-link">${item.text}</a></li>`;
  });
  tocHtml += '</ul>';
}

// SEO meta verileri
const pageTitle = post.title;
const description = post.meta_description || post.excerpt || post.title;
const keywords = post.keywords ? post.keywords.join(', ') : `bina güçlendirme, ${category?.name || ''}, ${post.title}`;

// Görsel URL'si ve alt metni
const imageUrl = socialMedia.image || post.featured_image || '';
const imageAlt = socialMedia.image_alt || post.title || '';
const publishDate = post.published_at || post.created_at;
const modifiedDate = post.updated_at || publishDate;

// Sosyal medya etiketleri
const socialTitle = socialMedia.title || post.title;
const socialDescription = socialMedia.description || post.meta_description || post.excerpt || '';
const twitterCard = socialMedia.twitter_card || 'summary_large_image';
const twitterUsername = socialMedia.twitter_username || 'binaguclendirme';
const facebookAppId = socialMedia.facebook_app_id || '';

// Canonical URL
const canonicalURL = new URL(Astro.url.pathname, SITE_URL).toString();

// BreadcrumbItem arayüzünü tanımla (Bileşen ile aynı)
interface BreadcrumbItem {
  name: string;
  url?: string;
}

// Breadcrumb verilerini hazırla (Türü açıkça belirt)
const breadcrumbItems: BreadcrumbItem[] = [
  { name: "Ana Sayfa", url: SITE_URL },
];
if (category) {
  // Kategori URL'sini doğru oluşturduğumuzdan emin olalım
  const categoryUrl = new URL(`/kategori/${category.slug}`, SITE_URL).href;
  breadcrumbItems.push({ name: category.name, url: categoryUrl });
}
breadcrumbItems.push({ name: post.title }); // Son öğenin URL'si yok (Artık hata vermemeli)

// İletişim ve sosyal medya bilgileri
const COMPANY_PHONE = "+90-542-748-3855";
const COMPANY_EMAIL = "info@karbonguclendirme.com";
const COMPANY_ADDRESS = "İstanbul, Türkiye";
const SOCIAL_LINKS = {
  instagram: "https://www.instagram.com/karbonguclendirme/",
  facebook: "https://www.facebook.com/karbonguclendirme/",
  twitter: "https://twitter.com/karbonguclendirme/"
};

// Schema.org JSON-LD
const fullSchema = JSON.stringify({
  "@context": "https://schema.org",
  "@graph": [
    // Organization
    {
      "@type": "https://schema.org/LocalBusiness",
      "@id": `${SITE_URL}/#localbusiness`,
      "name": category?.name,
      "url": SITE_URL,
      "telephone": COMPANY_PHONE,
      "email": COMPANY_EMAIL,
      "description": description,
      "image": [
        `${SITE_URL}/logo.webp`
      ],
      "logo": {
        "@type": "https://schema.org/ImageObject",
        "@id": `${SITE_URL}/#logo`,
        "url": `${SITE_URL}/logo.webp`,
        "width": "512",
        "height": "512",
        "contentUrl": `${SITE_URL}/logo.webp`
      },
      "priceRange": "₺₺₺",
      "currenciesAccepted": "TRY",
      "paymentAccepted": "Nakit, Kredi Kartı, Banka Havalesi",
      "areaServed": {
        "@type": "City",
        "name": cityName
      },
      "address": {
        "@type": "https://schema.org/PostalAddress",
        "streetAddress": COMPANY_ADDRESS,
        "addressLocality": cityName,
        "addressRegion": cityName,
        "postalCode": "34093",
        "addressCountry": {
          "@type": "Country",
          "name": "TR"
        }
      },
      "geo": {
        "@type": "https://schema.org/GeoCoordinates",
        "latitude": "41.0082",
        "longitude": "28.9475"
      },
      "openingHoursSpecification": [
        {
          "@type": "https://schema.org/OpeningHoursSpecification",
          "dayOfWeek": [
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday"
          ],
          "opens": "09:00",
          "closes": "18:00"
        }
      ],
      "sameAs": Object.values(SOCIAL_LINKS),
      "serviceType": [
        "Karbon Fiber Güçlendirme",
        "CFRP Güçlendirme",
        "Kolon Güçlendirme",
        "Kiriş Güçlendirme",
        "Bina Güçlendirme",
        "Zemin Güçlendirme",
        "Tavan Güçlendirme",
        "Duvar Güçlendirme",
        "FRP Güçlendirme"
      ],
      "makesOffer": [
        {
          "@type": "Offer",
          "name": "Karbon Fiber ile Kolon Güçlendirme",
          "description": "Yapısal dayanımı artırmak için karbon fiber ile kolon güçlendirme hizmeti"
        },
        {
          "@type": "Offer",
          "name": "CFRP ile Kiriş Güçlendirme",
          "description": "Bina kirişlerinin dayanımını artırmak için CFRP uygulaması"
        },
        {
          "@type": "Offer",
          "name": "FRP ile Duvar Güçlendirme",
          "description": "Duvarların depreme karşı dayanıklılığını artırma hizmeti"
        }
      ],
      "hasOfferCatalog": {
        "@type": "OfferCatalog",
        "name": "Bina Güçlendirme Hizmetleri",
        "itemListElement": offerCatalogs
      }
    },
    // Website
    {
      "@type": "https://schema.org/WebSite",
      "@id": `${SITE_URL}/#website`,
      "url": SITE_URL,
      "name": pageTitle,
      "description": description,
      "publisher": {
        "@id": `${SITE_URL}/#organization`
      },
      "inLanguage": "tr-TR"
    },
    // BreadcrumbList (Veri breadcrumbItems'dan alındı)
    {
      "@type": "BreadcrumbList",
      "@id": `${canonicalURL}#breadcrumb`,
      "itemListElement": breadcrumbItems.map((item, index) => ({
        "@type": "ListItem",
        "position": index + 1,
        "name": item.name,
        // Son öğe hariç diğerlerine item ekle
        item: item.url ? item.url : undefined
      }))
    },
    // Blog
    {
      "@type": "https://schema.org/Blog",
      "@id": `${SITE_URL}/blog/`,
      "mainEntityOfPage": `${SITE_URL}/blog/`,
      "name": `${pageTitle} Blog`,
      "description": post.meta_description,
      "publisher": {
        "@id": `${SITE_URL}/#organization`
      }
    },
    // Article
    {
      "@type": "https://schema.org/BlogPosting",
      "@id": `${canonicalURL}#article`,
      "mainEntityOfPage": {
        "@type": "WebPage",
        "@id": `${canonicalURL}#webpage`
      },
      "headline": pageTitle,
      "name": pageTitle,
      "description": post.meta_description,
      "url": canonicalURL,
      "author": {
        "@type": "https://schema.org/Organization",
        "@id": `${SITE_URL}/#localbusiness`,
        "name": category?.name,
        "url": SITE_URL
      },
      "publisher": {
        "@type": "https://schema.org/Organization",
        "@id": `${SITE_URL}/#localbusiness`,
        "name": COMPANY_NAME,
        "url": SITE_URL,
        "logo": {
          "@type": "https://schema.org/ImageObject",
          "url": `${SITE_URL}/logo.webp`,
          "width": "512",
          "height": "512"
        }
      },
      "image": {
        "@type": "ImageObject",
        "url": imageUrl ? new URL(imageUrl, SITE_URL).href : `${SITE_URL}/placeholder.jpg`,
        "width": 1200,
        "height": 630
      },
      "datePublished": publishDate ? new Date(publishDate).toISOString() : undefined,
      "dateModified": modifiedDate ? new Date(modifiedDate).toISOString() : undefined,
      "keywords": post.keywords || [],
      "articleSection": category?.name || "Blog",
      "articleBody": contentHtml,
      "wordCount": post.content ? post.content.split(/\s+/).length : 0,
      "inLanguage": "tr-TR",
      "isPartOf": {
        "@id": `${canonicalURL}#webpage`
      },
      "about": {
        "@type": "Service",
        "serviceType": category?.name || "Bina Güçlendirme",
        "provider": {
          "@type": "https://schema.org/LocalBusiness",
          "@id": `${SITE_URL}/#localbusiness`
        },
        "areaServed": {
          "@type": "City",
          "name": cityName
        },
        "hasOfferCatalog": category ? {
          "@type": "OfferCatalog",
          "name": `${category.name} Hizmetleri`,
          "itemListElement": [
            {
              "@type": "Offer",
              "itemOffered": {
                "@type": "Service",
                "name": `${category.name}`,
                "description": category.description || `İstanbul'da profesyonel ${category.name} hizmetleri`
              }
            }
          ]
        } : {
          "@type": "OfferCatalog",
          "name": `${category.name} Hizmetleri`,
          "itemListElement": offerCatalogs.slice(0, 3)
        }
      }
    },
    // WebPage (BlogPosting için ana sayfa)
    {
      "@type": "WebPage",
      "@id": `${canonicalURL}#webpage`,
      "url": canonicalURL,
      "name": pageTitle,
      "isPartOf": {"@id": `${SITE_URL}/#website`},
      "description": description,
      "breadcrumb": {"@id": `${canonicalURL}#breadcrumb`},
      "inLanguage": "tr-TR",
      "primaryImageOfPage": {
         "@type": "ImageObject",
        "url": imageUrl ? new URL(imageUrl, SITE_URL).href : `${SITE_URL}/placeholder.jpg`
      }
    },
    // FAQ
    ...(hasFaq ? [{
      "@type": "FAQPage",
      "url": `${canonicalURL}#faq`,
      "name": "Sık Sorulan Sorular",
      "mainEntity": processedFaq.map(faq => ({
        "@type": "Question",
        "name": faq.question,
        "acceptedAnswer": {
          "@type": "Answer",
          "text": faq.answer
        }
      }))
    }] : [])
  ]
});
---

<BaseLayout
  pageTitle={socialTitle}
  description={socialDescription}
  keywords={keywords}
  imageUrl={imageUrl}
  imageAlt={imageAlt}
  type="article"
  author={post.author || COMPANY_NAME}
  twitterCard={twitterCard}
  canonicalURL={canonicalURL}
  ogType="article"
  ogTitle={socialTitle}
  ogDescription={socialDescription}
  ogImage={imageUrl ? new URL(imageUrl, SITE_URL).href : undefined}
>
  <slot slot="head">
    <link rel="canonical" href={canonicalURL} />
    <meta property="article:published_time" content={new Date(publishDate).toISOString()} />
    <meta property="article:modified_time" content={new Date(modifiedDate).toISOString()} />
    {/* @ts-ignore - Linter might incorrectly flag category here */}
    {category && <meta property="article:section" content={category.name} />}
    {post.keywords && post.keywords.map((keyword: string) => (
      <meta property="article:tag" content={keyword} />
    ))}
    {facebookAppId && <meta property="fb:app_id" content={facebookAppId} />}
    {twitterUsername && <meta name="twitter:site" content={`@${twitterUsername}`} />}
    {twitterUsername && <meta name="twitter:creator" content={`@${twitterUsername}`} />}
    <script is:inline type="application/ld+json" set:html={fullSchema} />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>

    <!-- Critical ToC CSS (Inlined) -->
    <style is:inline>
      #toc-container { min-height: 80px; } /* Reserve space for CLS */
      .toc-title {
        font-size: 1.25rem; /* 20px */
        font-weight: 600;
        margin-bottom: 0.75rem; /* 12px */
      }
      .toc-list {
        list-style: disc;
        padding-left: 1.5em; /* 24px */
        margin: 0;
      }
      .toc-list li {
        margin-bottom: 0.5em; /* 8px */
      }
      .toc-list li a.toc-link {
        display: block; /* Ensure links take block space */
        /* Base font-size will be inherited, adjust in media query */
      }

      /* Mobile specific ToC font sizes and layout */
      @media (max-width: 768px) {
        #toc-container {
          min-height: 150px; /* Increased height for mobile */
        }
        .toc-title {
          font-size: 1.1rem; /* Smaller title on mobile */
        }
        .toc-list li a.toc-link {
          font-size: 0.9rem; /* Smaller link text on mobile */
        }
      }
    </style>

    <!-- Defer loading Non-Critical ToC CSS -->
    <link rel="preload" href="/styles/toc.css" as="style" onload="this.onload=null;this.rel='stylesheet'">
    <noscript><link rel="stylesheet" href="/styles/toc.css"></noscript>
  </slot>

  <article class="article-container">
    <header class="post-header">
      <Breadcrumbs items={breadcrumbItems} />

      {post.featured_image && (
        <div class="blog-featured-image">
          <ResponsiveImage
            src={post.featured_image}
            alt={imageAlt || post.title}
            width={1200}
            height={800}
            lazy={false}
          />
        </div>
      )}
      
      {/* Inject server-generated ToC HTML if it exists */}
      {tocHtml && (
        <div 
          id="toc-container" 
          class="mb-8 toc-box border p-4 rounded-md bg-gray-50 dark:bg-gray-800 dark:border-gray-700"
          set:html={tocHtml} 
        />
      )}
    </header>

    <div class="post-content markdown-content">
      <div id="post-content-inner" set:html={contentHtml} />
    </div>

    {hasFaq && (
      <div class="faq-section">
        <h2 class="section-title">Sık Sorulan Sorular</h2>
        {processedFaq.map((item: FaqItem) => (
          <div class="faq-item">
            <h2 class="faq-question">{item.question}</h2>
            <div class="faq-answer">
              <div set:html={parseMarkdown(item.answer).html} />
            </div>
          </div>
        ))}
      </div>
    )}

    <footer class="post-footer">
      <div class="post-navigation">
        <div class="post-meta">
          <div class="meta-container">
            <span class="meta-date">
              <time datetime={new Date(publishDate).toISOString()}>
                {new Date(publishDate).toLocaleDateString('tr-TR')}
              </time>
            </span>
            {modifiedDate !== publishDate &&
              <span class="meta-update">
                Son güncelleme: <time datetime={new Date(modifiedDate).toISOString()}>
                  {new Date(modifiedDate).toLocaleDateString('tr-TR')}
                </time>
              </span>
            }
          </div>
        </div>

        <div class="post-tags">
          {post.keywords && post.keywords.length > 0 && (
            <div class="tags-container">
              <span class="tags-label">Etiketler:</span>
              <ul class="tag-list">
                {post.keywords.map((tag: string) => (
                  <li class="tag-item">
                    <span class="tag-text">{tag}</span>
                  </li>
                ))}
              </ul>
            </div>
          )}
        </div>

        {/* @ts-ignore - Linter incorrectly flags category as potentially undefined here */}
        {hasCategory && (() => {
          const catSlug = category.slug;
          const catName = category.name;
          return (
            <div class="related-category">
              <span class="category-label">Kategori:</span>
              <a href={`/kategori/${catSlug}`} class="category-link">{catName}</a>
            </div>
          );
        })()}
      </div>
    </footer>

  </article>

  <style>
      /* Constrain article width on blog detail page, overriding blog.css width:100% */
  .article-container {
    max-width: 896px; /* Equivalent to Tailwind's max-w-4xl */
    width: auto; /* Allow max-width to take effect */
  }

  /* Style the featured image container within the constrained container */
  .blog-featured-image .responsive-image-container { /* Target the div from ResponsiveImage.astro */
     border-radius: var(--radius-md, 8px);
     box-shadow: var(--shadow-md, 0 5px 15px rgba(0,0,0,0.1));
     margin-bottom: 1.5rem; /* Add space below image */
     overflow: hidden; /* Ensure image respects border radius */
  }

  /* Reserve space for ToC to prevent CLS */
  #toc-container {
    min-height: 80px; 
  }

  /* --- NEW STYLES FOR FOOTER --- */

  /* Override blog.css width/flex behavior for navigation within constrained container */
  .post-navigation {
    width: auto; /* Don't force 100% width from blog.css */
    max-width: 100%; /* Ensure it doesn't overflow its parent */
    display: flex; /* Keep flex, but change direction */
    flex-direction: column; /* Stack items vertically */
    align-items: flex-start; /* Align items to the start (left) */
    gap: 1rem; /* Add space between stacked items (dates, tags, category) */
  }

  /* Adjust date container alignment */
  .post-meta .meta-container {
    justify-content: flex-start; /* Align dates to the start (left) instead of center */
    width: 100%; /* Allow it to take full width in the column layout */
  }

  /* Adjust tags container */
  .post-tags {
     flex: none; /* Remove flex: 1 from blog.css */
     width: 100%; /* Allow it to take full width in the column layout */
  }

  .post-tags .tags-container {
    justify-content: flex-start; /* Align tags to the start */
  }

  /* Adjust category alignment/margin */
  .related-category {
     margin-top: 0; /* Remove extra top margin inherited from blog.css as 'gap' handles spacing */
     width: 100%; /* Allow it to take full width in the column layout */
  }
    
  h1[id], h2[id], h3[id], h4[id], h5[id], h6[id] {
      scroll-margin-top: 4rem;
  }
</style>

</BaseLayout> 