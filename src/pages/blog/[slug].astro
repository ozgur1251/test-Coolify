---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getBlogPostBySlug, getCategories } from '../../lib/supabase';
import { parseMarkdown } from '../../lib/markdown';

// Server-side rendering kullan (statik ön-render yerine)
export const prerender = false;

// Site URL'sini çevre değişkeninden alma
const SITE_URL = import.meta.env.SITE_URL || Astro.url.origin || "https://istanbulbinaguclendirme.com";
const siteDomain = new URL(SITE_URL).hostname;

// Dinamik rota parametresini al
const { slug } = Astro.params;

// İlgili blog yazısını getir
const post = await getBlogPostBySlug(slug);

// Blog yazısı bulunamadıysa hata sayfasına yönlendir
if (!post) {
  return Astro.redirect('/404');
}

// Kategori bilgisini alalım
const categories = await getCategories();
const category = categories.find((cat: { id: number | string }) => cat.id === post.category_id);

// FAQ için bir arayüz tanımlayalım
interface FaqItem {
  question: string;
  answer: string;
}

// Sosyal medya değerlerini işle (varsayılan değerler atama)
const socialMedia = post.social_media || {};

// Markdown içeriğini işle ve başlık seviyelerini düzenle
function adjustHeadingLevels(content: string): string {
  // h2 başlıkları h1'e dönüştür (## -> #)
  return content.replace(/^## (.+)$/gm, '# $1');
}

// İçeriği markdown'dan HTML'e dönüştür
const contentHtml = parseMarkdown(adjustHeadingLevels(post.content));

// FAQ verilerini işleme fonksiyonu
function processFaqData(faqData: any[]): FaqItem[] {
  if (!faqData || !Array.isArray(faqData) || faqData.length === 0) {
    return [];
  }
  
  return faqData.filter(item => 
    item && typeof item === 'object'
  ).map(item => ({
    question: item.question || item.Question || item.soru || item.Soru || '',
    answer: item.answer || item.Answer || item.cevap || item.Cevap || ''
  })).filter(item => item.question && item.answer);
}

// FAQ verilerini işle
const processedFaq = processFaqData(post.faq) || processFaqData(post.sss) || [];
const hasFaq = processedFaq.length > 0;

// SEO meta verileri
const pageTitle = post.title;
const description = post.meta_description || post.excerpt || post.title;
const keywords = post.keywords ? post.keywords.join(', ') : `bina güçlendirme, ${category?.name || ''}, ${post.title}`;

// Görsel URL'sini optimize et
const optimizeImage = (url: string) => {
  if (!url) return '';
  if (url.endsWith('.webp')) return url;
  // CDN veya görsel işleme servisi entegrasyonu burada yapılabilir
  return url;
};

const imageUrl = optimizeImage(socialMedia.image || post.featured_image || '');
const imageAlt = socialMedia.image_alt || post.title || '';
const publishDate = post.published_at || post.created_at;
const modifiedDate = post.updated_at || publishDate;

// Görsel boyutları için (yatay veya dikey kontrolü)
let imageWidth = 1320;
let imageHeight = 920;
// Görsel dikey mi kontrolü yapılabilir - varsayılan olarak yatay kabul ediyoruz

// Sosyal medya etiketleri
const socialTitle = socialMedia.title || post.title;
const socialDescription = socialMedia.description || post.meta_description || post.excerpt || '';
const twitterCard = socialMedia.twitter_card || 'summary_large_image';
const twitterUsername = socialMedia.twitter_username || 'binaguclendirme';
const facebookAppId = socialMedia.facebook_app_id || '';

// Canonical URL 
const canonicalURL = new URL(Astro.url.pathname, SITE_URL).href;

// İletişim ve sosyal medya bilgileri
const COMPANY_NAME = "İstanbul Bina Güçlendirme";
const COMPANY_PHONE = "+90-542-748-3855";
const COMPANY_EMAIL = "info@karbonguclendirme.com";
const COMPANY_ADDRESS = "İstanbul, Türkiye";
const SOCIAL_LINKS = {
  instagram: "https://www.instagram.com/karbonguclendirme/",
  facebook: "https://www.facebook.com/karbonguclendirme/",
  twitter: "https://twitter.com/karbonguclendirme/"
};

// Final JSON-LD data
// Schema'ları direkt JSON olarak oluşturup stringfy ile kaçış karakterlerini düzenleme
const fullSchema = JSON.stringify({
  "@context": "https://schema.org",
  "@graph": [
    // Organization
    {
      "@type": "Organization",
      "@id": `${SITE_URL}/#organization`,
      "name": COMPANY_NAME,
      "url": SITE_URL,
      "logo": {
        "@type": "ImageObject",
        "@id": `${SITE_URL}/#logo`,
        "url": `${SITE_URL}/logo.webp`,
        "width": "512",
        "height": "512",
        "contentUrl": `${SITE_URL}/logo.webp`
      },
      "contactPoint": {
        "@type": "ContactPoint",
        "telephone": COMPANY_PHONE,
        "contactType": "customer service",
        "email": COMPANY_EMAIL,
        "areaServed": "TR",
        "availableLanguage": "Turkish"
      },
      "address": {
        "@type": "PostalAddress",
        "streetAddress": "Fatih/Aksaray",
        "addressLocality": "İstanbul",
        "addressRegion": "İstanbul",
        "postalCode": "34093",
        "addressCountry": "TR"
      },
      "sameAs": Object.values(SOCIAL_LINKS)
    },
    // Website
    {
      "@type": "WebSite",
      "@id": `${SITE_URL}/#website`,
      "url": SITE_URL,
      "name": COMPANY_NAME,
      "description": "İstanbul bina güçlendirme ve karbon fiber takviye çözümleri",
      "publisher": {
        "@id": `${SITE_URL}/#organization`
      },
      "inLanguage": "tr-TR"
    },
    // Breadcrumb
    {
      "@type": "BreadcrumbList",
      "@id": `${canonicalURL}#breadcrumb`,
      "name": `${post.title} - Sayfa Gezintisi`,
      "itemListElement": [
        {
          "@type": "ListItem",
          "position": 1,
          "name": "Ana Sayfa",
          "item": SITE_URL
        },
        {
          "@type": "ListItem",
          "position": 2,
          "name": "Blog",
          "item": `${SITE_URL}/blog/`
        },
        ...(category ? [{
          "@type": "ListItem",
          "position": 3,
          "name": category.name,
          "item": `${SITE_URL}/kategori/${category.slug}/`
        }] : []),
        {
          "@type": "ListItem",
          "position": category ? 4 : 3,
          "name": post.title,
          "item": canonicalURL
        }
      ]
    },
    // Article
    {
      "@type": "BlogPosting",
      "@id": `${canonicalURL}#article`,
      "headline": post.title,
      "name": post.title,
      "description": description,
      "url": canonicalURL,
      "mainEntityOfPage": {
        "@type": "WebPage",
        "@id": canonicalURL
      },
      "author": {
        "@type": "Organization",
        "@id": `${SITE_URL}/#organization`
      },
      "publisher": {
        "@type": "Organization",
        "@id": `${SITE_URL}/#organization`
      },
      "image": post.featured_image ? { "@id": `${canonicalURL}#primaryImage` } : null,
      "datePublished": new Date(publishDate).toISOString(),
      "dateModified": new Date(modifiedDate).toISOString(),
      "keywords": post.keywords || [],
      "articleSection": category?.name || "Blog",
      "inLanguage": "tr-TR"
    },
    // Featured Image (if exists)
    ...(post.featured_image ? [{
      "@type": "ImageObject",
      "@id": `${canonicalURL}#primaryImage`,
      "name": `${post.title} - Öne Çıkan Görsel`,
      "url": imageUrl,
      "width": imageWidth.toString(),
      "height": imageHeight.toString(),
      "caption": imageAlt,
      "inLanguage": "tr-TR",
      "license": "https://creativecommons.org/licenses/by-sa/4.0/",
      "acquireLicensePage": canonicalURL,
      "creditText": COMPANY_NAME,
      "copyrightNotice": `© ${new Date().getFullYear()} ${COMPANY_NAME}`,
      "creator": {
        "@type": "Organization",
        "@id": `${SITE_URL}/#organization`
      }
    }] : []),
    // FAQ (if exists)
    ...(hasFaq ? [{
      "@type": "FAQPage",
      "@id": `${canonicalURL}#faq`,
      "name": "Sık Sorulan Sorular",
      "headline": "Sık Sorulan Sorular",
      "description": `${post.title} hakkında sık sorulan sorular ve cevapları`,
      "mainEntity": processedFaq.map(faq => ({
        "@type": "Question",
        "name": faq.question,
        "acceptedAnswer": {
          "@type": "Answer",
          "text": faq.answer
        }
      }))
    }] : [])
  ]
});
---

<BaseLayout 
  pageTitle={socialTitle}
  description={socialDescription}
  keywords={keywords}
  imageUrl={imageUrl}
  imageAlt={imageAlt}
  type="article"
  author={post.author || COMPANY_NAME}
  twitterCard={twitterCard}
>
  <slot slot="head">
    <link rel="canonical" href={canonicalURL} />
    <meta property="article:published_time" content={new Date(publishDate).toISOString()} />
    <meta property="article:modified_time" content={new Date(modifiedDate).toISOString()} />
    {category && <meta property="article:section" content={category.name} />}
    {post.keywords && post.keywords.map((keyword: string) => (
      <meta property="article:tag" content={keyword} />
    ))}
    
    {facebookAppId && <meta property="fb:app_id" content={facebookAppId} />}
    {twitterUsername && <meta name="twitter:site" content={`@${twitterUsername}`} />}
    {twitterUsername && <meta name="twitter:creator" content={`@${twitterUsername}`} />}
    
    <!-- Yapısal veri -->
    <script is:inline type="application/ld+json" set:html={fullSchema} />
  </slot>

  <article class="article-container">
    <header class="post-header">
      {post.featured_image && (
        <div class="featured-image-container">
          <picture>
            <source
              srcset={optimizeImage(post.featured_image)}
              type="image/webp"
            />
            <img 
              src={post.featured_image}
              alt={imageAlt}
              class="featured-image"
              loading="eager"
              width="1320"
              height="920"
              decoding="async"
              fetchpriority="high"
            />
          </picture>
        </div>
      )}

      <div class="post-meta">
        <div class="meta-container">
          {category && (
            <a href={`/kategori/${category.slug}`} class="post-category">
              {category.name}
            </a>
          )}
          <span class="meta-date">
            <time datetime={new Date(publishDate).toISOString()}>
              {new Date(publishDate).toLocaleDateString('tr-TR')}
            </time>
          </span>
          {modifiedDate !== publishDate && 
            <span class="meta-update">
              Son güncelleme: <time datetime={new Date(modifiedDate).toISOString()}>
                {new Date(modifiedDate).toLocaleDateString('tr-TR')}
              </time>
            </span>
          }
        </div>
      </div>
    </header>
    
    <div class="post-content markdown-content">
      <div set:html={contentHtml} />
    </div>
    
    {hasFaq && (
      <div class="faq-section">
        <h2 class="section-title">Sık Sorulan Sorular</h2>
        {processedFaq.map((item: FaqItem) => (
          <div class="faq-item">
            <h3 class="faq-question">{item.question}</h3>
            <div class="faq-answer">
              <div set:html={parseMarkdown(item.answer)} />
            </div>
          </div>
        ))}
      </div>
    )}
    
    <footer class="post-footer">
      <div class="post-navigation">
        <div class="post-tags">
          {post.keywords && post.keywords.length > 0 && (
            <div class="tags-container">
              <span class="tags-label">Etiketler:</span>
              <ul class="tag-list">
                {post.keywords.map((tag: string) => (
                  <li class="tag-item">
                    <span class="tag-text">{tag}</span>
                  </li>
                ))}
              </ul>
            </div>
          )}
        </div>
        
        {category && (
          <div class="related-category">
            <span class="category-label">Kategori:</span>
            <a href={`/kategori/${category.slug}`} class="category-link">{category.name}</a>
          </div>
        )}
      </div>
    </footer>
  </article>
</BaseLayout>

<style>
  .article-container {
    width: 100%;
    max-width: 800px;
    margin: 0 auto;
    padding: 0 1rem;
  }

  .post-header {
    margin-bottom: 2rem;
  }

  .featured-image-container {
    width: 100%;
    max-width: 1320px;
    margin: 0 auto 1.5rem;
    position: relative;
    aspect-ratio: 1320/920;
    overflow: hidden;
    border-radius: var(--radius-md);
  }

  .featured-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .post-meta {
    text-align: center;
    margin-bottom: 2rem;
  }

  .meta-container {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1rem;
    flex-wrap: wrap;
    font-size: 0.9rem;
    color: var(--color-text-light);
  }

  .post-category {
    background-color: var(--color-primary-light);
    color: var(--color-primary);
    padding: 0.25rem 0.75rem;
    border-radius: var(--radius-sm);
    font-weight: 500;
    text-decoration: none;
    transition: background-color 0.2s ease;
  }

  .post-category:hover {
    background-color: var(--color-primary);
    color: white;
  }

  .meta-date, .meta-update {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
  }

  .meta-date::before {
    content: "📅";
  }

  .meta-update::before {
    content: "🔄";
  }

  .section-title {
    font-size: 1.75rem;
    font-weight: 600;
    margin: 2rem 0 1.5rem;
    color: var(--color-primary);
    position: relative;
    padding-bottom: 0.5rem;
  }

  .section-title::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 60px;
    height: 3px;
    background: var(--color-primary);
    border-radius: 3px;
  }
  
  .post-content {
    font-size: 1.125rem;
    line-height: 1.7;
    color: var(--color-text);
  }
  
  .markdown-content {
    font-size: 1.125rem;
    line-height: 1.7;
    color: var(--color-text);
  }

  .markdown-content :global(h1) {
    font-size: clamp(1.75rem, 5vw, 2.5rem);
    line-height: 1.2;
    font-weight: 700;
    margin: 0 0 1.5rem;
    color: var(--color-primary);
  }

  .markdown-content :global(h2) {
    font-size: clamp(1.5rem, 4vw, 1.75rem);
    margin-top: 2.5rem;
    margin-bottom: 1.25rem;
    font-weight: 600;
    color: var(--color-secondary, #4a90e2);
  }

  .markdown-content :global(h3) {
    font-size: clamp(1.25rem, 3vw, 1.5rem);
    margin-top: 2rem;
    margin-bottom: 1rem;
    font-weight: 600;
    color: var(--color-secondary, #4a90e2);
  }

  .markdown-content :global(h4) {
    font-size: clamp(1.1rem, 2.5vw, 1.25rem);
    margin-top: 1.75rem;
    margin-bottom: 0.875rem;
    font-weight: 600;
    color: var(--color-secondary, #4a90e2);
  }

  .markdown-content :global(p) {
    margin-bottom: 1.25rem;
  }

  .markdown-content :global(img) {
    max-width: 100%;
    height: auto;
    border-radius: var(--radius-sm);
    margin: 1.5rem 0;
  }

  .markdown-content :global(ul), 
  .markdown-content :global(ol) {
    margin: 1.25rem 0;
    padding-left: 1.5rem;
  }

  .markdown-content :global(li) {
    margin-bottom: 0.5rem;
  }

  .markdown-content :global(blockquote) {
    border-left: 4px solid var(--color-primary);
    padding: 0.5rem 0 0.5rem 1rem;
    margin: 1.5rem 0;
    background-color: var(--color-bg-secondary);
    border-radius: 0 var(--radius-sm) var(--radius-sm) 0;
  }

  .markdown-content :global(blockquote p) {
    margin: 0;
    color: var(--color-text-light);
    font-style: italic;
  }
  
  .faq-section {
    margin: 2rem auto;
    padding: 1.5rem;
    background-color: var(--color-bg-secondary);
    border-radius: var(--radius-md);
    max-width: 100%;
    width: 100%;
  }
  
  .faq-item {
    margin-bottom: 1rem;
    border-bottom: 1px solid var(--color-border);
    padding-bottom: 1rem;
  }
  
  .faq-item:last-child {
    border-bottom: none;
    margin-bottom: 0;
  }
  
  .faq-question {
    font-size: 1.2rem;
    font-weight: 600;
    margin-bottom: 0.75rem;
    color: var(--color-primary);
    cursor: pointer;
  }
  
  .faq-answer {
    color: var(--color-text-light);
    overflow-wrap: break-word;
    word-wrap: break-word;
  }
  
  .post-navigation {
    display: flex;
    flex-wrap: wrap;
    margin: 2rem auto 0;
    border-top: 1px solid var(--color-border);
    padding-top: 1.5rem;
    max-width: 100%;
    width: 100%;
    padding-left: 1rem;
    padding-right: 1rem;
  }
  
  .post-tags {
    flex: 1;
    min-width: 250px;
  }
  
  .tags-container {
    display: flex;
    align-items: baseline;
    flex-wrap: wrap;
  }
  
  .tags-label {
    font-weight: 600;
    margin-right: 0.5rem;
  }
  
  .tag-list {
    display: flex;
    list-style: none;
    padding: 0;
    margin: 0;
    flex-wrap: wrap;
  }
  
  .tag-item {
    margin-right: 0.5rem;
    margin-bottom: 0.5rem;
    background-color: var(--color-bg-accent);
    padding: 0.2rem 0.5rem;
    border-radius: var(--radius-sm);
    font-size: 0.9rem;
  }
  
  .related-category {
    margin-top: 1rem;
  }
  
  .category-label {
    font-weight: 600;
    margin-right: 0.5rem;
  }
  
  .category-link {
    color: var(--color-primary);
    text-decoration: none;
  }
  
  .category-link:hover {
    text-decoration: underline;
  }

  article {
    width: 100%;
    max-width: 100%;
    overflow: hidden;
  }

  @media (min-width: 993px) {
    .post-content, .post-navigation, .faq-section {
      max-width: 800px;
    }
    
    .post-header {
      max-width: 1200px;
    }
    
    .featured-image-container {
      max-width: 1320px;
    }
  }
  
  @media (max-width: 992px) {
    .featured-image-container {
      max-width: 100%;
    }
    
    .post-content, .post-navigation, .faq-section {
      max-width: 100%;
    }
  }

  @media (max-width: 768px) {
    .article-container {
      padding: 0 1rem;
    }
    
    .featured-image-container {
      margin: 1rem -1rem;
      border-radius: 0;
    }
    
    .post-content {
      font-size: 1rem;
    }

    .meta-container {
      flex-direction: column;
      gap: 0.5rem;
    }

    .post-meta {
      padding: 0;
    }
  }
  
  @media (max-width: 576px) {
    .post-title {
      font-size: 1.3rem;
    }
    
    .post-meta {
      flex-direction: column;
      gap: 0.5rem;
    }
    
    .featured-image-container {
      aspect-ratio: 1.33/1;
    }
    
    .post-content, .post-navigation, .faq-section, .post-header {
      padding: 0 1.25rem;
    }
    
    .faq-question {
      font-size: 1rem;
    }
  }
  .post-content {
    max-width: 100%;
    margin: 2rem auto;
    line-height: 1.6;
  }

  .main-heading {
    margin-bottom: 10px;
    font-size: 2rem;
    color: var(--color-text);
    line-height: 1.3;
    word-wrap: break-word;
    font-weight: 700;
  }
</style>

<script>
  // Görsel optimizasyonu için yardımcı fonksiyon
  function getOptimizedImageUrl(imageUrl: string): string {
    if (!imageUrl) return '';
    
    // Eğer görsel zaten webp formatında ise
    if (imageUrl.endsWith('.webp')) return imageUrl;
    
    // CDN veya görsel işleme servisi kullanıyorsanız
    // return `https://your-cdn.com/image/optimize/${imageUrl}?format=webp&width=1320&height=920`;
    
    // Basit durumda orijinal görseli döndür
    return imageUrl;
  }
</script> 