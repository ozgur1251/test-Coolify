---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCategories, getBlogPostsByCategory, getCategoryBySlug } from '../../lib/supabase';

// Server-side rendering kullan (statik ön-render yerine)
export const prerender = false;

// Dinamik rota parametresini al
const { slug } = Astro.params;

// İlgili kategoriyi bul
const category = await getCategoryBySlug(slug);

// Kategori bulunamadıysa hata sayfasına yönlendir
if (!category) {
  return Astro.redirect('/404');
}

// Bu kategorideki blog yazılarını getir
const posts = await getBlogPostsByCategory(category.id);

const pageTitle = `${category.name} | Bina Güçlendirme Makaleleri`;
const description = category.description || `${category.name} bölgesinde bina güçlendirme, deprem güçlendirme, karbon fiber hizmetleri ile ilgili makaleler.`;
const keywords = `bina güçlendirme, ${category.name}, deprem güçlendirme, karbon fiber, kolon güçlendirme, CFRP`;

// Schema.org yapısal veri
const collectionSchema = {
  "@context": "https://schema.org",
  "@type": "CollectionPage",
  "headline": pageTitle,
  "description": description,
  "url": Astro.site ? new URL(Astro.url.pathname, Astro.site).href : Astro.url.pathname,
  "mainEntity": {
    "@type": "ItemList",
    "itemListElement": posts.map((post: { slug: string; title: string }, index: number) => ({
      "@type": "ListItem",
      "position": index + 1,
      "url": Astro.site ? new URL(`/blog/${post.slug}`, Astro.site).href : `/blog/${post.slug}`,
      "name": post.title
    }))
  }
};
---

<BaseLayout 
  pageTitle={pageTitle} 
  description={description} 
  keywords={keywords}
  type="website"
>
  <Fragment slot="head">
    <script is:inline type="application/ld+json" set:html={JSON.stringify(collectionSchema)} />
  </Fragment>

  <div class="category-container">
    <header class="category-header">
      <h1>{category.name}</h1>
      {category.description && <p class="category-description">{category.description}</p>}
      <p class="post-count"><span>{posts.length}</span> makale bulundu</p>
    </header>
    
    {posts.length === 0 ? (
      <div class="no-posts">
        <p>Bu kategoride henüz makale bulunmamaktadır.</p>
      </div>
    ) : (
      <div class="post-grid" role="feed" aria-labelledby="category-feed">
        <span id="category-feed" class="visually-hidden">{category.name} kategorisindeki makaleler</span>
        {posts.map((post: { slug: string; title: string; featured_image?: string; created_at: string; meta_description?: string; excerpt?: string }) => (
          <article class="post-card">
            <a href={`/blog/${post.slug}`} class="card-link">
              <div class="card-image">
                {post.featured_image ? (
                  <img 
                    src={post.featured_image} 
                    alt={post.title}
                    width="400"
                    height="225"
                    loading="lazy"
                    decoding="async"
                  />
                ) : (
                  <div class="placeholder-image" aria-hidden="true">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="64" height="64">
                      <path fill="currentColor" d="M19,3H5C3.9,3,3,3.9,3,5v14c0,1.1,0.9,2,2,2h14c1.1,0,2-0.9,2-2V5C21,3.9,20.1,3,19,3z M19,19H5V5h14V19z M13.96,12.29l-2.75,3.54l-1.96-2.36L6.5,17h11L13.96,12.29z"/>
                    </svg>
                  </div>
                )}
              </div>
              <div class="card-content">
                <h2>{post.title}</h2>
                <p class="post-date">
                  <time datetime={new Date(post.created_at).toISOString()}>
                    {new Date(post.created_at).toLocaleDateString('tr-TR')}
                  </time>
                </p>
                <p class="post-excerpt">{post.meta_description || post.excerpt || `${post.title} hakkında detaylı bilgi.`}</p>
                <span class="read-more">Devamını Oku →</span>
              </div>
            </a>
          </article>
        ))}
      </div>
    )}
  </div>
</BaseLayout>

<style>
  /* Kategori başlık stili */
  .category-container {
    padding: 0 1rem;
    width: 100%;
  }
  
  .category-header {
    margin-bottom: 2rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid var(--color-grey-light);
  }
  
  .category-header h1 {
    margin-bottom: 0.5rem;
    font-size: 1.8rem;
    font-weight: 600;
  }
  
  .category-description {
    color: var(--color-text-light);
    margin-bottom: 0.5rem;
  }
  
  .post-count {
    font-size: 0.9rem;
    color: var(--color-text-light);
  }
  
  .post-count span {
    font-weight: bold;
    color: var(--color-primary);
  }
  
  /* Card grid yapısı */
  .post-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 2rem;
    margin-bottom: 3rem;
  }
  
  /* Card tasarımı */
  .post-card {
    border-radius: var(--radius-sm);
    overflow: hidden;
    box-shadow: 0 3px 8px rgba(0,0,0,0.1);
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    background: white;
    height: 100%;
  }
  
  .post-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 5px 15px rgba(0,0,0,0.1);
  }
  
  .card-link {
    display: block;
    color: inherit;
    text-decoration: none;
    height: 100%;
  }
  
  .card-image {
    position: relative;
    padding-top: 56.25%; /* 16:9 aspect ratio */
    background-color: var(--color-grey-light);
    overflow: hidden;
  }
  
  .card-image img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  .placeholder-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--color-text-light);
    background-color: var(--color-grey-light);
  }
  
  .card-content {
    padding: 1rem;
  }
  
  .card-content h2 {
    margin-top: 0;
    margin-bottom: 0.5rem;
    font-size: 1.25rem;
    line-height: 1.3;
    color: var(--color-text);
    -webkit-line-clamp: 2;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .post-date {
    font-size: 0.8rem;
    color: var(--color-text-light);
    margin-bottom: 0.5rem;
  }
  
  .post-excerpt {
    font-size: 0.9rem;
    line-height: 1.5;
    color: var(--color-text);
    margin-bottom: 1rem;
    -webkit-line-clamp: 3;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .read-more {
    color: var(--color-primary);
    font-size: 0.9rem;
    font-weight: 500;
  }
  
  /* Boş kategori durumu */
  .no-posts {
    background-color: var(--color-grey-light);
    padding: 2rem;
    border-radius: var(--radius-sm);
    text-align: center;
    color: var(--color-text-light);
    margin-bottom: 3rem;
  }
  
  /* Erişilebilirlik */
  .visually-hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  
  /* Duyarlı tasarım */
  @media (max-width: 768px) {
    .post-grid {
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
      gap: 1.5rem;
    }
    
    .category-header h1 {
      font-size: 1.5rem;
    }
    
    .category-container {
      padding: 0 1.25rem;
    }
  }
  
  @media (max-width: 480px) {
    .post-grid {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }
    
    .category-header h1 {
      font-size: 1.3rem;
    }
  }
</style>